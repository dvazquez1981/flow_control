services:

  ionic-ui:
    build:
      context: ./src/frontend/ft
      dockerfile: Dockerfile
    ports:
      - "8100:8100"
    container_name: ionic-ui
    volumes:
      - ./src/frontend/ft:/app
      - /app/node_modules
    working_dir: /app
    command: ionic serve --external

  mysql-server:
    image: mysql:5.7
    hostname: mysql-server
    environment:
      MYSQL_ROOT_PASSWORD: userpass
    container_name: mysql-server
    volumes:
      - ./db/dumps:/docker-entrypoint-initdb.d
      - ./db/data:/var/lib/mysql
    networks:
      - app-fullstack-net
    ports:
      - "3306:3306"

  mysql-admin:
    image: phpmyadmin/phpmyadmin
    environment: 
      PMA_HOST: mysql-server
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: userpass
    container_name: mysql-admin
    networks:
      - app-fullstack-net
    depends_on:
      - mysql-server
    ports:
      - "8001:80"

  node-backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: node-backend
    working_dir: /src/backend
    volumes:
      - ./src/backend:/src/backend
    networks:
      - app-fullstack-net
    depends_on:
      - mysql-server
    ports: 
      - "8000:3000"
    command: >
      sh -c "npm install && nodemon -L index.js"

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    hostname: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"   # Puerto WebSocket opcional
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - app-fullstack-net
    restart: unless-stopped

networks:
  app-fullstack-net:
    driver: bridge
